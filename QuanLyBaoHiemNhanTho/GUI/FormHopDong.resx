<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="kryptonColorDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="kryptonColorDialog1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAEA8AAAEAIAAkBAAARgAAABAPAAABAAgAVAUAAGoEAAAQEAAAAQAgAGgEAAC+CQAAEBAAAAEA
        CABoBQAAJg4AACgAAAAQAAAAHgAAAAEAIAAAAAAAgAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACUxvFgxKaQ+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAspnMCjo4wZ4YjZ/+Uned5tDe4Vfa2toOAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAeHDKIjIrss8WTOD/eW0s/7yvw//I3OH/xtrf+cvd4bzW5OZy3+bsKQAA
        AAAAAAAAAAAAAAAAAAAAAAAAX1jCSCghru0dGNL/Fpfs/2Z/S/+9tMj/y9/k/8XX3P/H2Nv/ydnc/87c
        3//V4uPe4Orsld3l6j3///8BTkjCeyMasPwgGMn/IEjm/xu05f9Dqkv/slsc/6E+if+vcrr/vqnN/8/Z
        4P/P3N//0Nzf/9Ti5f/Y5OW+PjbCmx8Vtv8iGcH/JyHi/yOA6P8jxeL/NLRg/6GJCP+sTxj/nSZq/5kf
        jf+XI5z/qVix/72SyP/X0OX/3efpgiYdv3gjGcf/KyTk/ypO5v8pl+b/Lc3d/zW8cv9okxT/yHsA/6xN
        Ff+jKWP/niJ6/50fmf+bHaD/pSip8sabxhIzM8wFMivl2zAr6f8uhen/Mavo/zbM1/83w4T/OJge/8qR
        A//CbAH/sFAS/6krZP+hJG3/qSSL/61Fr30AAAAAAAAAAD856yg2WO7mNJru/zu86v8+zdT/OceK/zah
        Lf+Slw7/1YsA/75iAf+1VBD/tDBn/7U9hKoAAAAAAAAAAAAAAAAAAAAAPJvmMzuf9NNI0vP/RtPX/zzL
        jv85rUD/UJoa/+OXAP/ahgH/x2QD/8VuL5LMf5kKAAAAAAAAAAAAAAAAAAAAAAAAAABmmcwFUdXsek3W
        1NBB2Zj/Pb1Y/zupIv+8nQ3+7KMSssiDNkYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8BVM+XG0q0XzBWrT8sqtSqBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAP//
        AAD4/wAA8B8AAOABAADAAAAAAAAAAIABAACAAwAAwAMAAOAHAAD4HwAA//8AAP//AAAoAAAAEAAAAB4A
        AAABAAgAAAAAAOABAAAAAAAAAAAAAAAAAAAAAAAAeW0s/2Z/S/8fFbb/HRjS/yIZwf8jGcf/IBjJ/ych
        4v8rJOT/MCvp/xZM4P8gSOb/Kk7m/ziYHv82oS3/O6ki/zmtQP89vVj/NLRg/zW8cv9Qmhr/aJMU/0Oq
        S/8Wl+z/G7Tl/yOA6P8uhen/KZfm/zSa7v8xq+j/O7zq/zfDhP85x4r/PMuO/y3N3f82zNf/Ps3U/yPF
        4v9B2Zj/RtPX/0jS8/+dJmr/niJ6/6Ekbf+jKWP/qStk/7QwZ/+sTRX/rE8Y/7BQEv+1VBD/slsc/75i
        Af/HZAP/wmwB/8h7AP+ZH43/nR+Z/5sdoP+XI5z/qSSL/6E+if+pWLH/r3K6/5KXDv+hiQj/ypED/9WL
        AP/ahgH/45cA/72SyP+8r8P/vqnN/720yP/F19z/x9jb/8nZ3P/O3N//z9zf/9Dc3//I3OH/y9/k/8/Z
        4P/X0OX/1OLl/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/w0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
        DQ0NDQ0NDQ0NDQ0NAgIADQ0NDQ0NDQ0NDQ1IBRMaT0YNDQ0NDQ0NDQ0EBAoAR1BQUlRUDQ0NDQ0+AgMX
        AUlQSkpMT1RUVFQ+AgMLGBYzPT9IUlJSUlQFAgQHGSUSQS8rODk+RlNUBAUJDBsiExU3LywqOTo6PwUI
        CBodIx8NQjUxLCk4OA0NAwMaHicgDkBDNDErPA0NDQ0aHCcnIRAURDUvLyoNDQ0NDQIaGhMRD0FEMA0N
        DQ0NDQ0NDVMCAQ09DQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDf//AAD//wAA//8AAPj/AADwHwAA4AEAAMAA
        AAAAAAAAgAEAAIADAADAAwAA4AcAAPgfAAD//wAA//8AACgAAAAQAAAAIAAAAAEAIAAAAAAAAAgAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIwukoxJ6E0AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtpHaBzo3wHsXg6LZT3GdwdHg
        5EPl5eUKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdGrJGDQqs5ccRtjjXXZM/qCh
        uPfH3OHPxdrgtsrb4IfZ5ehR2+TtHQAAAAAAAAAAAAAAAAAAAAAAAAAAXFbDLywmr6cjG8juFn3n/2x4
        QP+8ssb/yd3i/8XX3PzH2dvny9vdzs/d4LXW4uKR3+nsYdjl5SgAAAAATEXASSwis7IjGb33HjTd/xio
        5/9RmEv/tn9h/7J/rf+3m8f/wbzS/8zZ3v/O3N//0d7g8djk6NPZ4+aJPjfDUisit8EiGbn9IxzW/yFl
        5/8fveP/O69W/6hzEf+mR0z/pUmP/6pfq/+xeLv/upXG/8W00v/V2OX/2OXmnjMswIogFr3/Jh7R/yg2
        4/8liuf/J8jf/zS3aP+GjQ3/uWMM/6Q4Qv+dI3n/miKM/6M9pf+tW7X/wILJ+Nrd5E0mG8BJKB3S8C0m
        5v8rZOf/LJ/m/zDM2v81vnn/VJUY/8iDAf+0WQz/qDhC/6Ilcf+eIYf/oB+X/6UvqcLMmcwKAACqAzIq
        5p0wOer2MIzq/zSw6P84zNX/N8SG/zebI/+2kwb/yHYA/7RWDP+tOUf/pyhq/6woieGrRK5SAAAAAAAA
        AAA/NuwcNl7sszSZ7/I+wuz/QM7U/znIi/82pDL/f5cR/9iOAP/FbAH/ulgM/7c7XOC1PYJ9AAAAAAAA
        AAAAAAAAAAAAADqc5Cc6n/SlSNHy4UfU1vQ9zpD/ObBF/0udG//ZlwL+24oD7sVmBNbEbS5y2m2RBwAA
        AAAAAAAAAAAAAAAAAAAAAAAAP3+/BFDX7WZN1tOvQdiX2zu8WN46pyLevJwN1+yjD5bGgTM7AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFXJlBhHsV4rVLA6J5nMmQUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//8AAP//AAD//wAA/P8AAPAfAADgAwAAwAAAAIAAAAAAAQAAgAEAAIAD
        AADABwAA4A8AAPgfAAD//wAA//8AACgAAAAQAAAAIAAAAAEACAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAA
        AAB5bSz/Zn9L/x8Vtv8dGNL/IhnB/yMZx/8gGMn/JyHi/ysk5P8wK+n/Fkzg/yBI5v8qTub/OJge/zah
        Lf87qSL/Oa1A/z29WP80tGD/Nbxy/1CaGv9okxT/Q6pL/xaX7P8btOX/I4Do/y6F6f8pl+b/NJru/zGr
        6P87vOr/N8OE/znHiv88y47/Lc3d/zbM1/8+zdT/I8Xi/0HZmP9G09f/SNLz/50mav+eInr/oSRt/6Mp
        Y/+pK2T/tDBn/6xNFf+sTxj/sFAS/7VUEP+yWxz/vmIB/8dkA//CbAH/yHsA/5kfjf+dH5n/mx2g/5cj
        nP+pJIv/oT6J/6lYsf+vcrr/kpcO/6GJCP/KkQP/1YsA/9qGAf/jlwD/vZLI/7yvw/++qc3/vbTI/8XX
        3P/H2Nv/ydnc/87c3//P3N//0Nzf/8jc4f/L3+T/z9ng/9fQ5f/U4uX/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/DQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
        AgIADQ0NDQ0NDQ0NDQ1IBRIaVEYNDQ0NDQ0NDQ07AgoAR1BKUFRUDQ0NDQ0MAgMXAUlQSkpMT1RUVFQ+
        AgMLGBYzPT9IUlJSUlQFAgQHGSUSQS8rODk+RlNUBAUJDBsiExU3LywqOTo6PwUICBodIx8NQjUxLCk4
        OA0NAwMaHicgDkBDNDErPA0NDQ0aHCcnIRAURDUvLyoNDQ0NDQIaGhMRD0FEMA0NDQ0NDQ0NDVMCAQ09
        DQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDf//AAD//wAA//8AAPz/AADwHwAA4AMAAMAAAACAAAAAAAEAAIAB
        AACAAwAAwAcAAOAPAAD4HwAA//8AAP//AAA=
</value>
  </data>
  <metadata name="MaHopDong.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="LoaiHopDong.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="NhanVien.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="KhachHang.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="NgayLap.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="NgayHetHan.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TinhTrang.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="PhiHopDong.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="PhiThanhToan.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="PhanTram.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>